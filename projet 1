from csv import reader
import csv
import re
def valider_numero(numero):
    #verifier que le numero a une taille 7 caractères
    if len(numero) != 7:
        return False
    #verifier que le numero contient seulement des chiffres  et- des lettres
    if not numero.isalnum():
        return False
    else:
     return True
#fonctiojn pour valider le nom et le prenom de l'élève
def valider_nom_prenom(nom_prenom):
    #verifierv que le nom ou le prenom commence par une lettre
    if not nom_prenom[0].isalpha():
      return False
    #verifier que le nom ou le prenom contient au moins 2 ou 3 lettres respectivement
    if len(nom_prenom) < 2 or len(nom_prenom) < 3 :
        return False
    else:
        return True
#fonction pour valider la date de naissance l'élève
def valider_date_de_naissance(date_naissance):
    #verifier que la date est au format JJ/MM/AAAA
    try:
        jour, mois, annee = date_naissance.split('/')
        jour, mois, annee = int(jour), int(mois), int(annee)
    except ValueError:
        return False
    #verifier que la date est valide(par exemple,pas de 30fevrier)
    if jour < 1 or jour > 31 or mois < 1 or mois > 12 or annee < 1900 or annee >2099:
        return False
    else:
        return True
#fonction pour valider la classe de l'éléève
def valider_classe(classe):
    #remplacer les espace et les ieme,ème,ième,iem etc  par eme
  classe = classe.replace(' ','')
  #verifions les classe valides
  if classe  not in ['6emeA', '6emeB', '5emeA','5emeB', '4emeA', '4emeB','3emeA','3emeB']:
              return False
  else:
                return True
#fonction pour valider les notes de l'élève
def valider_notes(notes):
    #verifier que chaque note est format[devoir1|devoir2:examen]
    for note in notes.split('#'):
        if not re.match(r'^[A-Za-z]+\[\d+\|\d+:\d+\]$', note):
            return False
    else:
        return True
#fonction calcul moyenne de l'élève
def calcul_moyenne(notes):
    moyenne_general=0
    somme=0.0
    for note in notes.split('#'):
        matieres,notes_devoirs,note_examen = re.match(r'^([A-Za-z]+)\[(\d+)\|(\d+):(\d+)\]$', note).group()
        notes_devoirs = re.match(r'^(\d+)\|(\d+))')
        for i in range(len(notes_devoirs)):
          somme += notes_devoirs[i]
          moyenne = somme / len(notes_devoirs)
    moyenne_general+= (moyenne+2*float(note_examen))/3
    return notes_devoirs, note_examen, moyenne_general 
#lire les donnees depuis le fichier csv
#fichier='/home/faye/Documents/Donnees_Projet_Python_DataC5.csv'
#fichier='/home/faye/Documents/Donnees_Projet_Python_DataC5.csv'
#def ouvrir(fichier):
#definition des expression regulier pour verification
# def menu(choix):
    
# #tableau pour les donnéés valides et invalides 
#fichier=
# tab_valide=[]
# tab_invalide=[]
# def ouvrir(fichier):
#     NUMERO_REGEX = r'^[A-Z0-9]{7}$'
#     NOM_REGEX = r'^[a-zA-Z]{2,}$'
#     PRENOM_REGEX = r'^[a-zA-Z]{3,}$'
#     DATE_REGEX = r'^\d{2}/\d{2}/\d{4}$'
#     CLASSE_REGEX = r'^[3456]eme?[A-B]$'
#     NOTE_REGEX = r'^\d{1,2}(\|\d{1,2}:\d{2})?$'
   
# #ouverture du fichier contenant les donnees des eleves 
#     with open('/home/faye/Documents/Donnees_Projet_Python_DataC5.csv', 'r') as monlecteur:
#      monlecteur_csv = reader(monlecteur,delimiter = ',')
#     # for i in monlecteur_csv:
#     #     print(i)
     
#      #lecture des ligne
#      for i in monlecteur_csv:
#      #supression d'espace en debut et fin de ligne
#       #line=line.strip()
#      #separation des donnees de la ligne
#       #monlecteur_csv=line.split(',')
#      #verification validité des donnees 
#       numero_valide = bool(re.match(NUMERO_REGEX, i[1]))
#       nom_valide = bool(re.match(NOM_REGEX, i[2]))
#       prenom_valide = bool(re.match(PRENOM_REGEX, i[3]))
#       date_valide = bool(re.match(DATE_REGEX, i[4]))
#       classe_valide = bool(re.match(CLASSE_REGEX, i[5]))
#      #verification de validiter des notes
#       notes_valides = True
#       moyenne=0.0
#       #somme = 0.0
#       for note in i[6:]:
#             note.split('#')
#             note_valide = bool(re.match(NOTE_REGEX, note))
#             if not note_valide:
#              notes_valides = False
#              break
#             else:
#              note_devoir, note_examen = note.split('|') if '|' in note else(note, '0')
#              note_devoir = float(note_devoir)
#              note_examen = float(note_examen.split(':')[0])
#              moyenne += (note_devoir+ 2 * note_examen) / 3
# #si toutes les donnees sont valides on ajoute la ligne avec la moyenne au tableau des donnees valides
#       if valider_numero== True and valider_nom_prenom == True and valider_date_de_naissance == True and valider_classe == True and valider_notes == True:
#         classe=monlecteur_csv[5].replace('eme ', 'eme').replace('ieme ','eme')
#      #print(i)
#     tab_valide.append({'code': i[0],
#                         'numero': i[1],
#                         'nom': i[2],
#                         'prenom': i[3],
#                         'date_de_naissance':i[4],
#                         'classe': i[5],
#                         'notes': i[6:],
#                         'moyenne': moyenne/len(i[6:])
#                         })
    
#print(tab_valide)
    #   else:
    #      tab_invalide.append(i)
    #      print(tab_invalide)

#menu pour affichage des donnees 
fichier='/home/faye/Documents/Donnees_Projet_Python_DataC5.csv'
def ouvrir(fichier):
    tab_valide=[]
    tab_invalide=[]
    with open(fichier,'r') as monlecteur:
        monlecteur_csv = reader(monlecteur,delimiter = ',')
        #donnees=[ligne for ligne in monlecteur_csv]
        for i in monlecteur_csv:
            #print(donnees)
            if valider_numero == True and valider_nom_prenom == True and valider_date_de_naissance == True and  valider_notes == True and valider_classe == True:
                tab_valide.append(i)
            else:
                tab_invalide.append(i)
    return tab_valide, tab_invalide


valide, invalide = valider_notes(fichier)
print(invalide)

       
#Aficher le menu
# while True:
#         choix = input('que voulais-vous afficher ?(1: donnees valides, 2: donnees invalides, 3: quitter)') 

        
            
    
    
     
        
                                               
                                              
        
              
                                          